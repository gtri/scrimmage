###############################################################################
# Dockerfile to build SCRIMMAGE
###############################################################################
FROM ubuntu:16.04

MAINTAINER Kevin DeMarco

# Copy repo code into image
RUN mkdir -p /root/scrimmage
COPY ./ /root/scrimmage/

WORKDIR /root

# this is for openai gym
# not installed as part of 3rd-party building
# so as not to confuse python environments
# see here for installation commands:
# https://github.com/openai/gym#installing-everything
RUN apt-get update && apt-get install -y python3-pip python3-numpy python3-dev cmake lcov zlib1g-dev libjpeg-dev xvfb libav-tools xorg-dev python3-opengl libboost-all-dev libsdl2-dev swig
RUN apt-get update && apt-get install -y git ninja-build
RUN git clone https://github.com/openai/gym
WORKDIR /root/gym
RUN pip3 install -e '.[all]'
WORKDIR /root

# these are only used for static analysis of the code
RUN apt-get update && apt-get install -y cppcheck python3-pytest python3-pip
RUN pip3 install cpplint

# Install dependencies provided by package manager
WORKDIR /root/scrimmage
RUN ./setup/install-binaries.sh -e 0 -p 3

# Build 3rd-party dependencies
RUN mkdir -p ./3rd-party/build && \
    cd ./3rd-party/build && \
    /bin/bash -c "cmake .. && source ~/.scrimmage/setup.bash && make"

# build 3rd party python protobuf
RUN cd /root/scrimmage/3rd-party/build/src/protobuf/python && \
    python3 setup.py build && python3 setup.py install

# build 3rd party python grpc
RUN cd /root/scrimmage/3rd-party/build/src/grpc && \
    pip3 install -rrequirements.txt && \
    GRPC_PYTHON_BUILD_WITH_CYTHON=1 python3 setup.py install

# GRPC requirements installs futures, which doesn't make sense for python3
RUN pip3 uninstall -y futures

# Run static analysis tests
WORKDIR /root/scrimmage
RUN py3clean -v .
RUN py.test-3 test/test_cppcheck.py
RUN echo "the following test is optional but will check for style"
RUN python3 test/test_cpplint.py

# Build scrimmage core, plugins, and documentation
RUN /bin/bash -c "mkdir -p build && \
    cd build && \
    cmake .. -G Ninja -DPYTHON_MIN_VERSION=3.0 -DBUILD_TESTS=ON -DBUILD_DOCS=ON && \
    source ~/.scrimmage/setup.bash && \
    ninja && \
    ninja docs"

# run tests
RUN /bin/bash -c "cd build && \
    source ~/.scrimmage/setup.bash && \
    ninja test && \
    scrimmage ../missions/straight-no-gui.xml"

# install python package and run tests
WORKDIR /root/scrimmage/python
RUN pip3 install -e .

WORKDIR /root/scrimmage
RUN /bin/bash -c "source ~/.scrimmage/setup.bash && py.test-3 python/tests"
