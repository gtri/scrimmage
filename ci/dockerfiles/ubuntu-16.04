###############################################################################
# Dockerfile to build SCRIMMAGE
###############################################################################
FROM ubuntu:16.04

MAINTAINER Kevin DeMarco

WORKDIR /root

#install ros
#see here: http://wiki.ros.org/kinetic/Installation/Ubuntu
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu xenial main" > /etc/apt/sources.list.d/ros-latest.list'
RUN apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
RUN apt-get update
RUN apt-get install -y ros-kinetic-desktop-full
RUN rosdep init && rosdep update
RUN echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc

# Install / setup scrimmage dependencies
RUN apt-get update && \
    apt-get install -y software-properties-common python-software-properties && \
    add-apt-repository ppa:kevin-demarco/scrimmage && \
    apt-get update && \
    apt-get install -y scrimmage-dependencies && \
    /opt/scrimmage/setup.sh

# this is for openai gym
# not installed as part of 3rd-party building
# so as not to confuse python environments
# see here for installation commands:
# https://github.com/openai/gym#installing-everything
RUN apt-get update && apt-get install -y python-pip python-numpy python-dev cmake zlib1g-dev libjpeg-dev xvfb libav-tools xorg-dev python-opengl libboost-all-dev libsdl2-dev swig
RUN apt-get update && apt-get install -y git ninja-build
RUN git clone https://github.com/openai/gym
WORKDIR /root/gym
RUN git checkout 0c91364cd4a7ea70f242a28b85c3aea2d74aa35a
RUN pip install -e '.[all]'
WORKDIR /root

# these are only used for static analysis of the code
RUN apt-get update && apt-get install -y cppcheck python-pytest python-pip
RUN pip install cpplint

RUN pip install protobuf==3.3.0 grpcio==1.2.1

RUN apt install -y ros-kinetic-mrpt-navigation

# Copy repo code into image
RUN mkdir -p /root/scrimmage/scrimmage
COPY ./ /root/scrimmage/scrimmage

# Install dependencies provided by package manager
WORKDIR /root/scrimmage/scrimmage
RUN ./setup/install-binaries.sh -e 0 -p 3

## Build 3rd-party dependencies
#RUN mkdir -p ./3rd-party/build && \
#    cd ./3rd-party/build && \
#    /bin/bash -c "cmake .. && source ~/.scrimmage/setup.bash && make"


## build 3rd party python protobuf
#RUN cd /root/scrimmage/3rd-party/build/src/protobuf/python && \
#    python3 setup.py build && python3 setup.py install
#
## build 3rd party python grpc
#RUN cd /root/scrimmage/3rd-party/build/src/grpc && \
#    pip install -rrequirements.txt && \
#    GRPC_PYTHON_BUILD_WITH_CYTHON=1 python3 setup.py install
#
## GRPC requirements installs futures, which doesn't make sense for python3
#RUN pip uninstall -y futures

# Test Plugin Generation
#RUN ./create-scrimmage-project.py my-scrimmage-plugins ~/scrimmage # TODO
WORKDIR /root/scrimmage/scrimmage/scripts
RUN ./generate-plugin.sh autonomy AutonomyTest ~/scrimmage/scrimmage
RUN ./generate-plugin.sh interaction InteractionTest ~/scrimmage/scrimmage
RUN ./generate-plugin.sh metrics MetricsTest ~/scrimmage/scrimmage
RUN ./generate-plugin.sh motion MotionTest ~/scrimmage/scrimmage
RUN ./generate-plugin.sh sensor SensorTest ~/scrimmage/scrimmage
RUN ./generate-plugin.sh controller ControllerTest ~/scrimmage/scrimmage
RUN ./generate-plugin.sh network NetworkTest ~/scrimmage/scrimmage

# Run static analysis tests
WORKDIR /root/scrimmage/scrimmage
RUN pyclean -v .
RUN py.test test/test_cppcheck.py
RUN echo "the following test is optional but will check for style"
RUN python test/test_cpplint.py

# Build scrimmage core, plugins, and documentation
RUN /bin/bash -c "mkdir -p build && \
    cd build && \
    source ~/.scrimmage/setup.bash && \
    cmake .. -G Ninja -DBUILD_TESTS=ON -DBUILD_DOCS=ON -DCMAKE_CXX_FLAGS="-Werror" && \
    ninja -j 3 && \
    ninja docs"

# run tests
RUN /bin/bash -c "cd build && \
    source ~/.scrimmage/setup.bash && \
    ninja test && \
    scrimmage ../missions/straight-no-gui.xml && \
    scrimmage ../missions/straight_jsbsim.xml"

# Test scrimmage_ros package integration
RUN mkdir -p /root/catkin_ws/src
WORKDIR /root/catkin_ws/src
RUN git clone https://github.com/ros-planning/navigation_msgs
RUN git clone https://github.com/SyllogismRXS/scrimmage_ros.git
WORKDIR /root/catkin_ws
RUN /bin/bash -c "source /opt/ros/kinetic/setup.bash && \
    source /opt/scrimmage/setup.sh && \
    catkin_make && \
    source devel/setup.bash && \
    source ~/.scrimmage/setup.bash && \
    catkin_make run_tests && \
    catkin_test_results"

# install python package and run tests
WORKDIR /root/scrimmage/scrimmage/python
RUN pip install -e .

WORKDIR /root/scrimmage/scrimmage
RUN /bin/bash -c "source ~/.scrimmage/setup.bash && py.test python/tests"
