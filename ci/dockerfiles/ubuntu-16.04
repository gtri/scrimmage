###############################################################################
# Dockerfile to build SCRIMMAGE
###############################################################################
FROM ubuntu:16.04 as dependencies

MAINTAINER Kevin DeMarco
ENV DEBIAN_FRONTEND noninteractive
SHELL ["/bin/bash", "-c"]

# Install initial dependencies and setup .bashrc
RUN echo "deb http://packages.ros.org/ros/ubuntu xenial main" > /etc/apt/sources.list.d/ros-latest.list \
 && apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 \
 && apt-get update \
 && apt-get install -y \
    ros-kinetic-desktop-full \
    software-properties-common \
    python3-software-properties \
    cppcheck \
    python3-pip \
    git \
    ninja-build \
    clang \
    ruby-full \
    build-essential \
    zlib1g-dev \
    python-rosdep \
    ros-kinetic-opencv3 \
    ros-kinetic-tf2 \
    ros-kinetic-mavros-msgs \
 && add-apt-repository ppa:kevin-demarco/scrimmage \
 && apt-get update \
 && apt-get install -y scrimmage-dependencies \
 && rm -rf /var/lib/apt/lists/* \
 && rosdep init && rosdep update \
 && echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc \
 && /opt/scrimmage/*/setup.sh

# Copy install binaries script into image and run
COPY ./setup/install-binaries.sh /root/install-binaries.sh
RUN /root/install-binaries.sh -e 0 --python 3 \
 && rm -rf /var/lib/apt/lists/*

# Build a python virtual environment
WORKDIR /root
COPY ./python/requirements-3.5.txt .
RUN python3 -m venv env \
    && source ./env/bin/activate \
    && pip install -r requirements-3.5.txt

FROM dependencies as builder

# Copy repo code into image
RUN mkdir -p /root/scrimmage/scrimmage
COPY ./ /root/scrimmage/scrimmage

# Run static analysis tests
WORKDIR /root/scrimmage/scrimmage
RUN find -name __pycache__ -o -name "*.pyc" | xargs rm -rfv \
    && source /root/env/bin/activate \
    && py.test test/test_cppcheck.py

# Test Plugin Generation
WORKDIR /root/scrimmage/scrimmage/scripts
RUN source /root/env/bin/activate \
 && ./create-scrimmage-project.py my-scrimmage-plugins ~/scrimmage \
 && ./generate-plugin.sh autonomy AutonomyTest ~/scrimmage/my-scrimmage-plugins \
 && ./generate-plugin.sh interaction InteractionTest ~/scrimmage/my-scrimmage-plugins \
 && ./generate-plugin.sh metrics MetricsTest ~/scrimmage/my-scrimmage-plugins \
 && ./generate-plugin.sh motion MotionTest ~/scrimmage/my-scrimmage-plugins \
 && ./generate-plugin.sh sensor SensorTest ~/scrimmage/my-scrimmage-plugins \
 && ./generate-plugin.sh controller ControllerTest ~/scrimmage/my-scrimmage-plugins \
 && ./generate-plugin.sh network NetworkTest ~/scrimmage/my-scrimmage-plugins

# Build scrimmage core, plugins, and documentation
WORKDIR /root/scrimmage/scrimmage
RUN source /root/env/bin/activate \
 && mkdir -p build \
 && cd build \
 && source /opt/ros/kinetic/setup.bash \
 && source ~/.bashrc \
 && source ~/.scrimmage/setup.bash \
 && cmake .. -G Ninja \
             -DPYTHON_MIN_VERSION=3.5  \
             -DBUILD_TESTS=ON \
             -DBUILD_DOCS=OFF \
             -DCMAKE_CXX_FLAGS="-Werror" \
 && ninja

# install python package and run tests
WORKDIR /root/scrimmage/scrimmage/python
RUN source /root/env/bin/activate \
    && python setup.py develop

# run tests
WORKDIR /root/scrimmage/scrimmage/build
RUN source /root/env/bin/activate && \
    source ~/.scrimmage/setup.bash && \
    export SCRIMMAGE_MISSION_PATH=$SCRIMMAGE_MISSION_PATH:$PWD && \
    py.test ../python/scrimmage/openai/tests/test_openai.py && \
    export CTEST_OUTPUT_ON_FAILURE=1 && \
    ninja test && \
    scrimmage ../missions/straight-no-gui.xml && \
    scrimmage ../missions/straight_jsbsim.xml

# Test scrimmage_ros package integration
RUN source /root/env/bin/activate \
 && pip install catkin-pkg==0.4.22 \
                rospkg==1.2.8 \
                defusedxml==0.6.0 \
 && mkdir -p /root/catkin_ws/src \
 && cd /root/catkin_ws/src \
 && git clone https://github.com/ros-planning/navigation_msgs \
 && git clone https://github.com/SyllogismRXS/scrimmage_ros.git \
 && cd /root/catkin_ws \
 && source /opt/ros/kinetic/setup.bash \
 && source /opt/scrimmage/*/setup.sh \
 && catkin_make \
 && source devel/setup.bash \
 && source ~/.scrimmage/setup.bash \
 && cd build \
 && make tests \
 && make test

WORKDIR /root/scrimmage/scrimmage
RUN /bin/bash -c "source /root/env/bin/activate && source ~/.scrimmage/setup.bash && py.test python/tests"

# Setup the scrimmage docker image to run as an executable
ENTRYPOINT ["/root/scrimmage/scrimmage/ci/scripts/scrimmage-wrapper.sh"]
CMD ["/root/scrimmage/scrimmage/missions/straight-no-gui.xml"]
